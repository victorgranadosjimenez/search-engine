# üé¨ Videoclub Microservicios


# üîç App Search Engine 


![Imagen del proyecto](https://raw.githubusercontent.com/victorgranadosjimenez/videoclub-microservicios-FRONTEND/refs/heads/master/Captura.JPG?raw=true)
![Imagen del proyecto](https://raw.githubusercontent.com/victorgranadosjimenez/videoclub-microservicios-FRONTEND/refs/heads/master/Captura3.JPG?raw=true)



## Ejemplo en vivo
https://victorgranados.com/search-engine/


## Descripci√≥n üìë
Cuando haces una b√∫squeda en Google o en un sitio con miles de productos, no se recorren todos los registros en tiempo real, sino que se crea un √≠ndice, una estructura de datos optimizada (como un diccionario invertido).
Cada palabra apunta a los documentos donde aparece.

  Etapas del proyecto:

  üß© Indexaci√≥n

A√±adimos documentos (t√≠tulo + contenido) con endpoint POST "/api/documents"

Los procesamos (tokenizar, eliminar stopwords, normalizar).

Creamos un √≠ndice invertido que nos dice en qu√© documentos aparece cada palabra 
y lo guardamos en Base de datos.

  üîç B√∫squeda

 Dado un texto de b√∫squeda, encontrar los documentos m√°s relevantes por palabras clave.

 Usar algoritmos de ranking b√°sicos (TF-IDF).

  ‚ö° Interfaz o API

Buscamos con un endpoint REST  /search?q=palabra
Muestra primero los documentos m√°s relevantes, seg√∫n cu√°ntas veces aparece la palabra.
Adem√°s:
- Resaltamos en amarillo las coincidencias en los resultados.
- podemos ver el √≠ndice invertido.
- Permitimosr b√∫squedas con ranking de relevancia (TF-IDF)



+------------------------------+
|         Data Source          |
|  (art√≠culos, textos, etc.)   |
+--------------+---------------+
               |
               v
+------------------------------+
|         Indexador            |
|  - Tokeniza texto            |
|  - Elimina palabras vac√≠as   |
|  - Crea √≠ndice invertido     |
+--------------+---------------+
               |
               v
+------------------------------+
|          Buscador            |
|  - Recibe consulta           |
|  - Busca en √≠ndice           |
|  - Calcula relevancia        |
+--------------+---------------+
               |
               v
+------------------------------+
|         API / Frontend       |
|  - Endpoint /search          |
|  - UI con autocompletado     |
+------------------------------+




## üß± Arquitectura del proyecto

Este proyecto sigue una estructura **MVC simplificada**, organizada de la siguiente forma:

search-engine/
‚îú‚îÄ‚îÄ src/main/java/searchEngine/
‚îÇ ‚îú‚îÄ‚îÄ controller/DocumentController.java ‚Üí Maneja las peticiones HTTP
‚îÇ ‚îú‚îÄ‚îÄ service/DocumentService.java ‚Üí L√≥gica de negocio y b√∫squedas
‚îÇ ‚îú‚îÄ‚îÄ repository/DocumentRepository.java ‚Üí Acceso a la base de datos (JPA)
‚îÇ ‚îú‚îÄ‚îÄ domain/Document.java ‚Üí Entidad JPA (id, title, content)
‚îÇ ‚îî‚îÄ‚îÄ SearchEngineApplication.java ‚Üí Clase principal de arranque
‚îú‚îÄ‚îÄ src/main/resources/application.properties
‚îî‚îÄ‚îÄ frontend/ ‚Üí Archivos est√°ticos
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ style.css
‚îî‚îÄ‚îÄ app.js



üöÄ Endpoints principales (API REST)
M√©todo  -	Endpoint  -	Descripci√≥n
GET  -	/api/documents	-  Devuelve todos los documentos
POST  -	/api/documents	-  Crea un nuevo documento
GET  -	/api/documents/search?q=palabra  -	Busca documentos que contengan la palabra
GET  -	/api/documents/search/ranked?q=palabra  -	Devuelve resultados ordenados por relevancia
GET  -	/api/documents/index  -	Devuelve el √≠ndice invertido completo


üíª Frontend
El frontend es una interfaz sencilla desarrollada con HTML, CSS y JavaScript, que interact√∫a con el backend mediante fetch.
Funcionalidades:
- A√±adir nuevos documentos
- Buscar por palabra clave o ranking
- Ver el √≠ndice invertido en formato JSON
Interfaz responsive con estilo minimalista tipo Google


üß† L√≥gica del √≠ndice invertido
Cada documento se tokeniza (palabras individuales), y se crea una estructura Map<String, Set<Long>>, donde cada palabra apunta a los IDs de los documentos que la contienen.
Esto permite realizar b√∫squedas r√°pidas sin escanear todo el texto.


‚öôÔ∏è C√≥mo ejecutar el proyecto
1. Clona el repositorio:
git clone https://github.com/victorgranadosjimenez/search-engine.git
2. Abre el proyecto en tu IDE (IntelliJ, VSCode o Eclipse).
- Aseg√∫rate de tener MySQL ejecut√°ndose en tu m√°quina.
3. Ejecuta la aplicaci√≥n:
mvn spring-boot:run
4. Abre el frontend (por ejemplo con http-server o doble clic en index.html):
npx http-server frontend
5. Visita:
http://localhost:8080/api/documents






## Tecnolog√≠as üõ†
[![JAVA](https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white)](https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n))
[![SPRINGBOOT](https://img.shields.io/badge/SpringBoot-6DB33F?style=flat-square&logo=Spring&logoColor=white)](https://en.wikipedia.org/wiki/Spring_Boot)
[![MYSQL](https://img.shields.io/badge/Mysql-6DB33F?style=flat-square&logo=Spring&logoColor=white)](https://en.wikipedia.org/wiki/MySql)
[![HTML](https://img.shields.io/badge/Html-6DB33F?style=flat-square&logo=Spring&logoColor=white)](https://en.wikipedia.org/wiki/Html)
[![CSS](https://img.shields.io/badge/Css-6DB33F?style=flat-square&logo=Spring&logoColor=white)](https://en.wikipedia.org/wiki/Css)
[![JAVASCRIPT](https://img.shields.io/badge/SpringBoot-6DB33F?style=flat-square&logo=Spring&logoColor=white)](https://en.wikipedia.org/wiki/JavaScript)

## Vista previa del proyecto
Si quieres hechas un vistazo al proyecto, te recomiendo:

![Imagen del proyecto](https://raw.githubusercontent.com/victorgranadosjimenez/videoclub-microservicios-FRONTEND/refs/heads/master/Captura.JPG?raw=true)
![Imagen del proyecto](https://raw.githubusercontent.com/victorgranadosjimenez/videoclub-microservicios-FRONTEND/refs/heads/master/Captura2.JPG?raw=true)
![Imagen del proyecto](https://raw.githubusercontent.com/victorgranadosjimenez/videoclub-microservicios-FRONTEND/refs/heads/master/Captura3.JPG?raw=true)


## Autor ‚úíÔ∏è
V√çCTOR GRANADOS JIM√âNEZ

<img src="https://avatars.githubusercontent.com/u/57761479?v=4" width=115><br>

* [Portafolio](https://victorgranados.com/)
* [Perfil Github](https://github.com/victorgranadosjimenez)
* [Correo](granadosvictor01@gmail.com)
* [LinkedIn](www.linkedin.com/in/victorgranadosjimenez/)


## Instalaci√≥n 
Este proyecto no necesita de instalaci√≥n. Simplemente abre la carpeta o haz doble click en el .html
  
## Licencia üìÑ
MIT Public License v3.0
No puede usarse comencialmente.





